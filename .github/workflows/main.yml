name: CI

# This workflow builds and tests the code
# For publishing to NuGet, create and publish a GitHub release

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOTNET_NOLOGO: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Avoid pre-populating the NuGet package cache

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # all

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3
        with:
          versionSpec: '5.x'

      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3

      - name: Display SemVer
        run: |
            echo "SemVer: $GitVersion_SemVer"

      - name: Restore
        run: dotnet restore
        working-directory: src

      - name: Build
        run: dotnet build -c Release --no-restore /p:Version=$GitVersion_SemVer
        working-directory: src

      - name: Test
        run: dotnet test --no-build -c Release --logger trx --logger "console;verbosity=detailed" --results-directory ../artifacts
        working-directory: src

      - name: Pack
        run: dotnet pack --no-build -c Release -o ../artifacts /p:Version=$GitVersion_SemVer
        working-directory: src

      - name: Create and push git tag
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a $GitVersion_SemVer -m "Release $GitVersion_SemVer"
          git push origin $GitVersion_SemVer

      - name: Push NuGet packages to Feedz ‚¨ÜÔ∏è
        working-directory: artifacts
        run: dotnet nuget push Feedz.Client.$GitVersion_SemVer.nupkg --api-key ${{ secrets.FEEDZ_APIKEY }} -s https://f.feedz.io/feedz-io/public/nuget/index.json

      - name: Test Report üß™
        uses: dorny/test-reporter@v1
        if: ${{ always() }}
        with:
          name: Tests
          path: artifacts/*.trx
          reporter: dotnet-trx

      - name: Create GitHub Release
        if: ${{ github.ref == 'refs/heads/main' && format('{0}', env.GITHUB_TOKEN) != '' }}
        working-directory: artifacts
        run: gh release create --draft ${{ steps.gitversion.outputs.preReleaseLabel != '' && '--prerelease' || '' }} --target ${{ github.ref_name }} --title $GitVersion_SemVer $GitVersion_SemVer Feedz.Client.$GitVersion_SemVer.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
